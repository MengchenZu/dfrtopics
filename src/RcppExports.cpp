// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// JS_divergence
double JS_divergence(NumericVector P, NumericVector Q);
RcppExport SEXP dfrtopics_JS_divergence(SEXP PSEXP, SEXP QSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type P(PSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Q(QSEXP);
    __result = Rcpp::wrap(JS_divergence(P, Q));
    return __result;
END_RCPP
}
// calc_row_entropy
NumericVector calc_row_entropy(const Eigen::MappedSparseMatrix<double> m);
RcppExport SEXP dfrtopics_calc_row_entropy(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const Eigen::MappedSparseMatrix<double> >::type m(mSEXP);
    __result = Rcpp::wrap(calc_row_entropy(m));
    return __result;
END_RCPP
}
// entropy
double entropy(NumericVector x);
RcppExport SEXP dfrtopics_entropy(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    __result = Rcpp::wrap(entropy(x));
    return __result;
END_RCPP
}
