#!/usr/bin/env perl 
#===============================================================================
#
#         FILE: count2txt
#
#        USAGE: count2txt <file1.csv file2.CSV ...>
#
#  DESCRIPTION: For each wordcount file xxx.csv or xxx.CSV, create a
#  corresponding file, xxx.txt, which simply consists of each of the
#  words listed in xxx.csv repeated as many times as the wordcount says.
#  That way you can feed original documents to any tool that wants
#  them---though the documents will be slightly scrambled.  
#
#       AUTHOR: Andrew Goldstone (agoldst), andrew.goldstone@gmail.com
# ORGANIZATION: Rutgers University, New Brunswick
#      VERSION: 1.0
#===============================================================================
use v5.14;
use utf8;                                   # source code itself is in utf-8
use warnings;
use warnings FATAL => "utf8";               # Unicode encode errors are fatal
use autodie;
use open qw( :std :utf8 );                  # default utf8 layer for open
use File::Basename;

use Getopt::Long;

my $dry_run="";
my $multifile="";
my $QUIET_LOG="";
GetOptions(
    "dry-run|n" => \$dry_run,
    "multifile"  => \$multifile,
    "quiet|n"  => \$QUIET_LOG,
    );

log_msg("Dry run: no files will be written\n") if $dry_run;

my $fh;

unless($multifile) {
    $fh = \*STDOUT;
}

foreach my $csv_file (@ARGV) {
    unless( -f $csv_file ) {
        warn "$csv_file not found; skipping\n";
        next;
    }
    unless( $csv_file =~ /\.csv/i ) {
        warn "$csv_file is not of form *.(csv|CSV); skipping\n";
        next;
    }
    open INFILE, $csv_file
        or die "Couldn't open $csv_file for reading";

    my ($stem,$directories,$suffix) = fileparse($csv_file,qr/\.csv/i);

    if($multifile) {
        my $filename = "${directories}$stem.txt"; 

        if( -f $filename ) {
            warn "Output $filename already exists; skipping processing of $csv_file\n";
            next;
        }

        unless($dry_run) {
            open $fh, ">", "$filename"
                or die "Couldn't open $filename for writing";
        }
    }

    my $header = <INFILE>;
    unless($header && $header eq "WORDCOUNTS,WEIGHT\n") {
        warn "unexpected header found: $header\nSkipping $csv_file\n";
        next;
    }

    unless($multifile) {
        print "${stem}$suffix ";
    }

    my $total_count = 0;
    while(<INFILE>) {
        chomp;
        my ($word,$count) = split /,/;

        unless($dry_run) { 
            print $fh "$word " x (0 + $count); 
        }

        $total_count += $count;
    }
    print "\n";

    log_msg("$csv_file: $total_count words written\n");

    close INFILE or die "Couldn't close input file";

    if(!$dry_run && $multifile) { 
        close $fh
            or die "Couldn't close output file";
    }
}

sub log_msg {
    print STDERR @_ unless $QUIET_LOG;
}
